name: CI

on: [push, workflow_dispatch]

jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Install Chocolatey
        run: |
          Set-ExecutionPolicy Bypass -Scope Process -Force; [System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor 3072; iex ((New-Object System.Net.WebClient).DownloadString('https://chocolatey.org/install.ps1'))
        continue-on-error: true

      - name: Install Chrome using Chocolatey
        run: |
          choco install googlechrome -y
          if (!(Get-Command "chrome.exe" -ErrorAction SilentlyContinue)) {
            Write-Error "Chrome installation failed."
            exit 1
          }
        continue-on-error: true

      - name: Download Chrome Remote Desktop
        run: |
          $Path = "$env:TEMP\chromeremotedesktop.msi"
          Invoke-WebRequest -Uri "https://dl.google.com/linux/direct/chrome-remote-desktop_current_amd64.deb" -OutFile $Path
          Start-Process -FilePath msiexec.exe -ArgumentList "/i", $Path, "/quiet", "/norestart" -Wait
          if (!(Test-Path "C:\Program Files (x86)\Google\Chrome Remote Desktop")) {
            Write-Error "Chrome Remote Desktop installation failed."
            exit 1
          }

      - name: Enable Remote Desktop
        run: Set-ItemProperty -Path 'HKLM:\System\CurrentControlSet\Control\Terminal Server' -name "fDenyTSConnections" -Value 0

      - name: Verify Chrome Remote Desktop Installation
        run: |
          if (!(Test-Path "C:\Program Files (x86)\Google\Chrome Remote Desktop\CurrentVersion")) {
            Write-Error "Chrome Remote Desktop installation not found. Verification failed."
            exit 1
          }

      - name: Configure Chrome Remote Desktop
        run: |
          & "C:\Program Files (x86)\Google\Chrome Remote Desktop\CurrentVersion\remoting_start_host.exe" --code="$Env:CRD_AUTH_CODE" --redirect-url="https://remotedesktop.google.com/_/oauthredirect" --name="GitHubActionsVM"
        env:
          CRD_AUTH_CODE: ${{ secrets.CRD_AUTH_CODE }}

      - name: Set Local User Password
        run: Set-LocalUser -Name "runneradmin" -Password (ConvertTo-SecureString -AsPlainText "P@ssw0rd!" -Force)

      - name: Open Firewall for Remote Desktop
        run: Enable-NetFirewallRule -DisplayGroup "Remote Desktop"
